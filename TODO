- Ray stream tracing:
	- Optimizations...


- Infinite lights (e.g. sun lights) will be considered part of the background,
  along with e.g. HDRI lighting backgrounds.

- Implement transforms and instancing:
	// - Implement relevant data structures and scene import code
	- Make BVH use instances instead of raw objects
	- Implement ray transforms during scene traversal
	- Implement recursive calls of traversers for assemblies

- Implement a shading system
	- Proper ray differentials
	- Stupid simple shaders first
	- Then use OSL

- More geometry types:
	//- Bicubic bezier patches
	- Catmull-clark subdivision surfaces
	- Triangle meshes
	//- Make spheres work again

- Performance improvements:
	- Change MicroSurface to use a BVH4
	- Investigate ways to make splitting and splitting-traversal faster:
		- Can we do BVH4 style traversal?

- Adaptive sampling scheme
	- "Population Monte Carlo"

- Film class:
	- Change Film class to allow locks on "buckets" of pixels, so that
	  threads can concurrently write to the Film instead of blocking
	  each other.
	- Make film class more data-type agnostic.  It should be the responsibility
	  of the Renderer and Integrator to make sure pixel data is interpretted and
	  used correctly.

- Cleanup:
	- Add NaN and Inf catching to key places in code
	- Surface Primitives should calculate their own pre-displacement surface normals

- Splitting:
	- Splitting code should have protection against stack overflow.
