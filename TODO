- Implement transforms and instancing:
	- This will be easiest in the context of breadth-first ray tracing.  So
	  change top-level traversal to use ray stream tracing of some kind.  This
	  will also have the side benefit of accessing the top-level BVH in a coherent
	  way as well.

- Implement a shading system
	- Use OSL
	- Proper ray differentials
	
- More geometry types:
	//- Bicubic bezier patches
	- Catmull-clark subdivision surfaces
	- Triangle meshes
	- Make spheres work again

- Performance improvements:
	- Change MicroSurface to use a BVH4
	- Investigate ways to make splitting and splitting-traversal faster:
		- Can we do BVH4 style traversal?
	
- Adaptive sampling scheme
	- "Population Monte Carlo"

- Film class:
	- Change Film class to allow locks on "buckets" of pixels, so that
	  threads can concurrently write to the Film instead of blocking
	  each other.
	- Make film class more data-type agnostic.  It should be the responsibility
	  of the Renderer and Integrator to make sure pixel data is interpretted and
	  used correctly.

- Cleanup:
	- Get rid of TimeBox class -- it's totally unnecessary
	- Add NaN and Inf catching to key places in code
	- Surface Primitives should calculate their own pre-displacement surface normals

- Splitting:
	- Splitting code should have protection against stack overflow.